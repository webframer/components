/// Generated by Webframe.app | Do not edit this file directly! \\\
export { React };
export namespace type {
    export let Enum: (...args: unknown[]) => unknown;
    export let InstanceOf: (T: any) => any;
    export let ListOf: (T: any) => any[];
    export let MapOf: any;
    export let OneOf: (...args: unknown[]) => unknown;
    export let Obj: any;
    export let ObjEqual: any;
    export let ObjectOf: any;
    export let Any: any;
    export let BigInt: bigint;
    export let Boolean: boolean;
    export let Float: number;
    export let Function: Function;
    export let JSXElement: JSX.Element;
    export let JSXElementType: ElementType;
    export let Integer: number;
    export let List: array;
    export let Map: any;
    export let Node: any;
    export let Number: number;
    export let Object: object;
    export let PropType: Function;
    export let String: string;
    export let StringObject: any;
    export let StringGetter: any;
    export let Symbol: symbol;
    export let UnsignedInteger: number;
    export let Unknown: unknown;
    import Base64 = String;
    export { Base64 };
    import Byte = UnsignedInteger;
    export { Byte };
    import ClassName = String;
    export { ClassName };
    import CSSLength = String;
    export { CSSLength };
    export let Collection: unknown;
    import Color = String;
    export { Color };
    import Decimal = UnsignedInteger;
    export { Decimal };
    import Degree = Number;
    export { Degree };
    let Element_1: any;
    export { Element_1 as Element };
    import Fraction = String;
    export { Fraction };
    export let FormValueType: unknown;
    import Icon = String;
    export { Icon };
    import Id = String;
    export { Id };
    import Millisecond = UnsignedInteger;
    export { Millisecond };
    import MIME = String;
    export { MIME };
    import Mm = Number;
    export { Mm };
    import Multiplier = Number;
    export { Multiplier };
    export let NodeOrFunction: any;
    import Percent = Float;
    export { Percent };
    import Percentage = Number;
    export { Percentage };
    export let Preview: unknown;
    export let Promise: any;
    export let PropTypes: any;
    import Px = Integer;
    export { Px };
    export let SizeModifier: unknown;
    import Timestamp = UnsignedInteger;
    export { Timestamp };
    import Url = String;
    export { Url };
    export let CSSLengthOrPx: unknown;
    export let Definition: any;
    export let DefinitionMap: any;
    export let File: any;
    export let Option: unknown;
    export let Options: any[];
    export let RefObject: any;
    export let Ref: unknown;
    export let Src: unknown;
    export let Style: any;
    export let UrlOrBase64OrPreview: unknown;
    export let Control: any;
    export let ControlType: any;
    export let ControlTypes: unknown;
    export let FileInput: any;
    export let Field: any;
    export let FieldForList: any[];
    export let Tag: any;
    export let TagIds: any[];
    export let TagById: any;
    import TagOptions = Options;
    export { TagOptions };
    export let Tooltip: unknown;
    export let Props: any;
}
export namespace TooltipPropTypes {
    export let children: any;
    export let on: unknown;
    export let position: unknown;
    export let align: unknown;
    import animation = type.String;
    export { animation };
    import delay = type.Millisecond;
    export { delay };
    import embedded = type.Boolean;
    export { embedded };
    import offset = type.Px;
    export { offset };
    import openInitially = type.Boolean;
    export { openInitially };
    import onOpen = type.Function;
    export { onOpen };
    import onClose = type.Function;
    export { onClose };
    import onMount = type.Function;
    export { onMount };
    import theme = type.String;
    export { theme };
    import tooltipClass = type.ClassName;
    export { tooltipClass };
}
import * as React from 'react';
