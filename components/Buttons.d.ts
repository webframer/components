/// Generated by Webframe.app | Do not edit this file directly! \\\
import { type } from '../types';
export interface ButtonsProps extends React.HTMLAttributes<HTMLElement> {
  /**
   * List of each Button props
   */
  items: Array<{
    icon?: string;
    children?: any;
    active?: boolean;
    /**
     * Tooltip props (or content) to display as popup on interaction with this component
     */
    tooltip?: string | number | boolean | Function | {
      children: string | number | boolean | Function;
      on?: 'click' | 'focus' | 'hover' | Array<'click' | 'focus' | 'hover'>;
      position?: 'top' | 'right' | 'bottom' | 'left';
      align?: 'start' | 'end';
      animation?: string;
      delay?: type.Millisecond;
      embedded?: boolean;
      offset?: type.Px;
      openInitially?: boolean;
      onOpen?: Function;
      onClose?: Function;
      onMount?: Function;
      theme?: string;
      /**
       * CSS class names as string, separated by space
       */
      tooltipClass?: string;
    };
    /**
     * Tooltip props (or content) to display as popup on interaction with this component
     */
    tooltipInner?: string | number | boolean | Function | {
      children: string | number | boolean | Function;
      on?: 'click' | 'focus' | 'hover' | Array<'click' | 'focus' | 'hover'>;
      position?: 'top' | 'right' | 'bottom' | 'left';
      align?: 'start' | 'end';
      animation?: string;
      delay?: type.Millisecond;
      embedded?: boolean;
      offset?: type.Px;
      openInitially?: boolean;
      onOpen?: Function;
      onClose?: Function;
      onMount?: Function;
      theme?: string;
      /**
       * CSS class names as string, separated by space
       */
      tooltipClass?: string;
    };
  }>;
  /**
   * Whether to render Buttons vertically
   */
  vertical?: boolean;
  /**
   * Extra inner content to render after buttons
   */
  children?: string | number | boolean;
}
/**
 * Group of Buttons, similar to Tabs in Buttoned Style with support for Tooltips
 *
 * Note:
 *  - To have two Tooltips over a button (one for dropdown menu, another as tooltip),
 *    attach the extra tooltip to <span class="position-fill"/> inside button,
 *    this way we do not change HTML markup for buttons (to style border radius),
 *    and dropdown matches exact button position (only extra tooltip has border offset).
 *
 *  - To have nested dropdown menu buttons, use `dropdownPopup` props for `tooltip` prop.
 */
export function Buttons(props: ButtonsProps): JSX.Element;

export default ButtonsMemo;
declare const ButtonsMemo: React.NamedExoticComponent<ButtonsProps>;
import * as React from 'react';
