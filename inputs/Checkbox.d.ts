/// Generated by Webframe.app | Do not edit this file directly! \\\
export interface CheckboxProps extends React.HTMLAttributes<HTMLElement> {
  /**
   * Text to use for checkbox, uses `id` if not given
   */
  label?: string;
  /**
   * Unique identifier, default is string created from React.useId()
   */
  id?: string;
  /**
   * Input onChange callback(event, value: any, name?: string, self: object)
   */
  onChange?: Function;
  /**
   * Internal value for controlled checked or unchecked state
   */
  value?: any;
  /**
   * Initial value for uncontrolled checked or unchecked state
   */
  defaultValue?: any;
  /**
   * Internal value to assign to checked case
   */
  checkedValue?: any;
  /**
   * Internal value to assign to unchecked case
   */
  uncheckedValue?: any;
  /**
   * Whether to disable toggling state
   */
  readonly?: boolean;
}
/**
 * Checkbox Input Component.
 * @see https://webframe.app/docs/ui/inputs/Checkbox
 */
export function Checkbox(props: CheckboxProps): JSX.Element;

export function useToggleInputSetup({ checkedValue, uncheckedValue, value, input, self }: {
    checkedValue: any;
    uncheckedValue: any;
    value: any;
    input: any;
    self: any;
}): {
    checked: boolean;
};
export default CheckboxMemo;
declare const CheckboxMemo: React.NamedExoticComponent<CheckboxProps>;
import * as React from 'react';
