/// Generated by Webframe.app | Do not edit this file directly! \\\
export interface SwitchProps extends React.HTMLAttributes<HTMLElement> {
  /**
   * Whether to lock input value when `value` prop is given
   */
  controlledValue?: boolean;
  /**
   * Initial value for uncontrolled checked or unchecked state
   */
  defaultValue?: any;
  /**
   * Internal value to assign to checked case
   */
  checkedValue?: any;
  /**
   * Internal value to assign to unchecked case
   */
  uncheckedValue?: any;
  /**
   * Label to show before the Switch (or after Switch with `reverse` true)
   */
  label?: string | number | boolean | Function;
  /**
   * UI to show for checked state inside the Switch toggle, defaults to a checkmark icon
   */
  checkedLabel?: string | number | boolean | Function;
  /**
   * UI to show for unchecked state inside the Switch toggle, defaults to empty Spacer
   */
  uncheckedLabel?: string | number | boolean | Function;
  /**
   * Handler(event, value: any, name?: string, self) on input value changes
   */
  onChange?: Function;
  /**
   * Handler(event, value: any, name?: string, self) on input focus
   */
  onFocus?: Function;
  /**
   * Handler(event, value: any, name?: string, self) on input blur
   */
  onBlur?: Function;
  /**
   * Internal value for controlled checked or unchecked state
   */
  value?: any;
  /**
   * Function(value, name?, event?, self) => boolean - Input value formatter for input.checked
   */
  format?: Function;
  /**
   * Function(value: boolean, name?, event, self) => any - value parser for onChange/onBlur/onFocus handlers
   */
  parse?: Function;
  /**
   * Unique identifier, default is string created from React.useId()
   */
  id?: string;
}
/**
 * Switch (Toggle) Input Component
 * @see https://webframe.app/docs/ui/inputs/Switch
 */
export function Switch(props: SwitchProps): JSX.Element;

export default SwitchMemo;
declare const SwitchMemo: React.NamedExoticComponent<SwitchProps>;
import * as React from 'react';
